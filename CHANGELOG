CHANGELOG

[0.20.0-pre]
- SPLIT CODE INTO NPM MODULES

DIST
[0.20.0] 63633 / 27038
[0.11.0] 105191 / 62366


#################### VERSION 1 ##################
[0.11.0-pre]
- Remove pitch/props
- New pitch fifths vector representation to faster calculus
- New pitch ternary array representation to represent both pitch and interval:
this is big, we can treat pitch and intervals with same functions
- TODO: scale/scale scale/fromName
- Refactor scale and chord modules to use less code
- Move collection/harmonize to pitch
- Move pitch/harmonizer to interval

[0.11.0]
- Rename fifths/fifths to fifths/distance (and related functions)
- Add binaryScale functions: isValid, fromNumber, props and modes
- Rename binarySet to binaryScale
- Create pitch/harmonizer to create harmonizers

[0.10.0]
- Add chord/scaleNames
- Add chord/voicings
- Add pitch/byFreq to order pitches by frequencies
- move pitchClass functions to collections (remove pitchSet module)
- rename pitch/pitch to pitch/sci
- rename interval/interval to interval/build
- move interval/harmonize to collection/harmonize
- simplify chord and scale modules by moving all shared to collection module
- move json to data folders
- move rotate to collection module
- add collection/dictionary and remove _internal functions
- generate json files with arrays

[0.9.0]
- remove incubator/fifths since there is a fifths module with all this functionallity (and more)
- add pitch/enharmonics to get all enharmonics of a pitch
- pitch/props chroma property is always between 0 and 11
- Rename genericSet to toIntervals
- Rename module binary-set to binarySet
- Rename module set to pitchSet
- Chord and scale names are no longer chached
- Remove scale/parse
- Fix chord aliases
- Chord tonics can be lowercase (revert previous change) and remove chord/parse
- Rename scale/scaleNames to scale/scaleNames
- Rename chord/allChords to chord/chordNames
- Chord tonics must be uppercase
- _internal/coerce was returning null in some cases and throwing exceptions
in others. Now it just return null when something is not valid
- Rename scale/names to scale/allScales and chord/names to chord/allChords
- Move binary set functions to its own module
- Add precision to pitch/cents
- Add fifths/transpose to transpose a pitch class a num of fifths
- Add pitch/alterToAcc to convert from alter number to accidentals
- Refactor key/keyNumber to use fifths/fifths
- Add fifths/byFifths to sort collections by fifths distance
- Add fifths/fifths to calculate distances in fifths between two pitch classes
- Add fifths module
- Add set/genericSet
- Add set/binarySets
- Rename set/binaryIntervals to set/fromBinary
- Add internal/findByValue and refactor scale/name
- interval/interval now accepts quality as second parameter

[0.8.0]
- Rename pitch/pitch to pitch/build
- Add utils/prop
- Using utils/prop add pitch/octave pitch/midi pitch/pitchClass
- Rename interval/interval to interval/build
- Create utils/toArray
- Rename scale/intervals to scale/generic
- Remove sequence/reverse and sequence/retrograde
- Move sequence/cycle to incubator
- Tonal object facade
- Move sequence/harmonize to interval/harmonize
- Move pitchSet to set
- Move binary-scale functions into set
- Rename pitch property sci to str
- interval/build only builds an string and renamed to interval/interval
- pitch/build only builds an string and renamed to pitch/pitch
- rename utils to internal to explicit the use case of those functions
- change pitch/pitch function signature to match the order of components in the string
- change interval/interval function signature to match the order of components in the string
- add pitch/letter and scale/triad
- don't use Uint8Array for compatibility
- scales and chords uses internal/lookup and internal/keys
- new function chord/names
- incubator/cycle now returns a pitch set
- move scale/triadic to incubator
- add pitch/key and pitch/fromKey
- add pitch/fromFreq function
- add pitch/cents
- move pitch/distance to pitch/interval
- add pitch/intervalTo and pitch/intervalFrom
- interval/props and pitch/props now returns an immutable object (via Object.freeze)
- interval/interval can receive a negative octave number

[0.7.0]
- Last iteration without changelog ;-)
